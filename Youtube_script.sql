-- MySQL Script generated by MySQL Workbench
-- Thu Jul 25 13:34:19 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` DEFAULT CHARACTER SET utf8 ;
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`user` (
  `id_user` INT(6) NULL DEFAULT NULL,
  `mail` VARCHAR(50) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `username` VARCHAR(45) NULL DEFAULT NULL,
  `birth_date` TIMESTAMP(2) NULL DEFAULT NULL,
  `gender` ENUM("male", "female") NULL DEFAULT NULL,
  `country` VARCHAR(45) NULL DEFAULT NULL,
  `post_code` VARCHAR(10) NULL DEFAULT NULL,
  `channel_id` VARCHAR(45) NULL DEFAULT NULL,
  `channel_subscribed` INT(6) UNSIGNED NULL DEFAULT NULL,
  `playlist_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_user`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `channel_id_UNIQUE` (`channel_id` ASC) VISIBLE,
  INDEX `fk_user_playlist1_idx` (`playlist_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_playlist1`
    FOREIGN KEY (`playlist_id`)
    REFERENCES `Youtube`.`playlist` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`playlist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`playlist` (
  `id_playlist` INT(6) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `date_creation` TIMESTAMP(2) NULL DEFAULT NULL,
  `status` ENUM("public", "private") NULL DEFAULT NULL,
  `user_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_playlist`),
  INDEX `fk_playlist_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_playlist_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`tag`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`tag` (
  `id_tag` INT(6) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id_tag`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`channel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`channel` (
  `id_channel` INT(6) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` TEXT(100) NULL DEFAULT NULL,
  `date_creation` TIMESTAMP(2) NULL DEFAULT NULL,
  `user_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_channel`),
  INDEX `fk_channel_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_channel_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`video`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`video` (
  `id_video` INT(6) NOT NULL,
  `title` VARCHAR(100) NULL DEFAULT NULL,
  `description` VARCHAR(300) NULL DEFAULT NULL,
  `size` DECIMAL(7,2) NULL DEFAULT NULL,
  `name_file` VARCHAR(45) NULL DEFAULT NULL,
  `length` DECIMAL(7,2) NOT NULL,
  `thumbnail` BLOB NULL DEFAULT NULL,
  `times_played` INT UNSIGNED NULL DEFAULT NULL,
  `number_likes` INT UNSIGNED NULL DEFAULT NULL,
  `number_dislikes` INT UNSIGNED NULL DEFAULT NULL,
  `status` ENUM("public", "hidden", "private") NOT NULL,
  `date_posted` TIMESTAMP(2) NULL DEFAULT NULL,
  `like_id` INT(6) NULL DEFAULT NULL,
  `user_id` INT(6) NOT NULL,
  `tag_id` INT(6) NOT NULL,
  `channel_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_video`),
  INDEX `fk_video_user_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_video_tag1_idx` (`tag_id` ASC) VISIBLE,
  INDEX `fk_video_channel1_idx` (`channel_id` ASC) VISIBLE,
  CONSTRAINT `fk_video_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_tag1`
    FOREIGN KEY (`tag_id`)
    REFERENCES `Youtube`.`tag` (`id_tag`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_video_channel1`
    FOREIGN KEY (`channel_id`)
    REFERENCES `Youtube`.`channel` (`id_channel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`comment` (
  `id_comment` INT NOT NULL AUTO_INCREMENT,
  `text` VARCHAR(200) NULL DEFAULT NULL,
  `date_posted` TIMESTAMP(2) NULL DEFAULT NULL,
  `like_id` INT(6) NULL DEFAULT NULL,
  `number_likes` INT NOT NULL,
  `number_dislikes` INT NOT NULL,
  `video_id` INT(6) NOT NULL,
  `user_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_comment`),
  INDEX `fk_comment_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_comment_video1_idx` (`video_id` ASC) VISIBLE,
  CONSTRAINT `fk_comment_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_comment_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `Youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`like`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`like` (
  `id_like` INT(6) NOT NULL,
  `like_option` ENUM("like", "dislike") NULL DEFAULT NULL,
  `date` TIMESTAMP(2) NULL DEFAULT NULL,
  `video_id` INT(6) NOT NULL,
  `comment_id` INT NOT NULL,
  `user_id` INT(6) NOT NULL,
  PRIMARY KEY (`id_like`),
  INDEX `fk_like_video1_idx` (`video_id` ASC) VISIBLE,
  INDEX `fk_like_comment1_idx` (`comment_id` ASC) VISIBLE,
  INDEX `fk_like_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_like_video1`
    FOREIGN KEY (`video_id`)
    REFERENCES `Youtube`.`video` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_comment1`
    FOREIGN KEY (`comment_id`)
    REFERENCES `Youtube`.`comment` (`id_comment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_like_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`like_dislike_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Youtube`.`like_dislike_comment` (
  `comment_id` INT NOT NULL,
  `user_id` INT(6) NOT NULL,
  `date` TIMESTAMP(2) NOT NULL,
  `like_dislike_option` ENUM("like", "dislike") NOT NULL,
  INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
  INDEX `comment_id_idx` (`comment_id` ASC) VISIBLE,
  CONSTRAINT `user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `Youtube`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `comment_id`
    FOREIGN KEY (`comment_id`)
    REFERENCES `Youtube`.`comment` (`id_comment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
